{"version":3,"file":"static/js/411.9687918e.chunk.js","mappings":"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","sources":["@crema/core/Form/FormInput.jsx","@crema/core/Form/FormTextArea.jsx","pages/sample/FeedBack Title/FeedBackTitlePostEdit.jsx","../node_modules/antd/es/col/index.js"],"sourcesContent":["import React from 'react';\nimport {Form, Input} from \"antd\";\nimport PropTypes from \"prop-types\";\n\nconst FormInput = ({label,name,required,required_text,warning}) => {\n    return (\n        <Form.Item\n            label={warning ? <div>\n                <p>{label}</p>\n                <br/>\n                <p>{warning}</p>\n            </div>:<div>{label}</div>}\n            name={name}\n\n            rules={[{\n                required: required, message: required_text\n            }]}\n        >\n            <Input />\n        </Form.Item>\n    );\n};\n\nexport default FormInput;\n\nFormInput.propTypes = {\n    label: PropTypes.string,\n    warning: PropTypes.string,\n    name: PropTypes.any,\n    required: PropTypes.bool,\n    required_text:PropTypes.string\n};","import React from 'react';\nimport {Form } from \"antd\";\nimport TextArea from \"antd/es/input/TextArea\";\nimport PropTypes from \"prop-types\";\n\nconst FormTextArea = ({label,name,required,required_text}) => {\n    return (\n        <Form.Item\n            label={label}\n            name={name}\n\n            rules={[{\n                required: required, message: required_text\n            }]}\n        >\n            <TextArea rows={4}/>\n        </Form.Item>\n    );\n};\n\nexport default FormTextArea;\n\nFormTextArea.propTypes = {\n    label: PropTypes.string,\n    name: PropTypes.any,\n    required: PropTypes.bool,\n    required_text:PropTypes.string\n};","import React, {useEffect} from 'react';\nimport {Button, Col, Form, message, Row} from \"antd\";\nimport {useMutation, useQuery} from \"react-query\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport {AppLoader} from \"../../../@crema\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\nimport FormInput from \"../../../@crema/core/Form/FormInput\";\nimport FormTextArea from \"../../../@crema/core/Form/FormTextArea\";\n\nconst initialValueForm = {\n    title_ru: \"\",\n    title_uz: \"\",\n    title_en: \"\",\n    text_ru: \"\",\n    text_uz: \"\",\n    text_en: \"\",\n};\n\n\nconst FeedBackTitlePostEdit = () => {\n\n    const [form] = Form.useForm();\n    const navigate = useNavigate()\n    const {editId} = useSelector(state => state.editData)\n    const dispatch = useDispatch()\n\n\n    // query-feedback-title\n    const {\n        mutate: postFeedbackTitleMutate,\n        data: postFeedbackTitle,\n        isLoading: postFeedbackTitleLoading,\n        isSuccess: postFeedbackTitleSuccess,\n    } = useMutation(({url, data}) => apiService.postData(url, data), {\n        onSuccess: () => {\n\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n    // query-edit\n    const {\n        isLoading: editFeedbackTitleLoading,\n        data: editFeedbackTitleData,\n        refetch: editFeedbackTitleRefetch,\n        isSuccess: editFeedbackTitleSuccess,\n    } = useQuery([\"edit-feedback-title\", editId], () => apiService.getDataByID(\"/feedback-section-title\", editId), {\n        enabled: false\n    });\n    // put-query\n    const {\n        mutate: putFeedbackTitle,\n        isLoading: putFeedbackTitleLoading,\n        data: putData,\n        isSuccess: putFeedbackTitleSuccess\n    } = useMutation(({\n                         url,\n                         data,\n                         id\n                     }) => apiService.editData(url, data, id), {\n        onSuccess: () => {\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n    // feedback-title success\n    useEffect(() => {\n        if (putFeedbackTitleSuccess) {\n            dispatch({type: EDIT_DATA, payload: \"\"})\n        }\n\n        if (postFeedbackTitleSuccess || putFeedbackTitleSuccess) {\n\n            navigate('/feedback-title')\n        }\n    }, [postFeedbackTitle, putData])\n\n\n    // if edit contact\n    useEffect(() => {\n        if (editId !== \"\") {\n            editFeedbackTitleRefetch();\n        }\n    }, [editId]);\n\n    // if no edit feedback-title\n    useEffect(() => {\n        if (editId === \"\") {\n            form.setFieldsValue(initialValueForm)\n        }\n    }, []);\n\n\n    //edit feedback-title\n    useEffect(() => {\n        if (editFeedbackTitleSuccess) {\n\n\n            const edit = {\n                title_ru: editFeedbackTitleData.title_ru,\n                title_uz: editFeedbackTitleData.title_uz,\n                title_en: editFeedbackTitleData.title_en,\n                text_ru: editFeedbackTitleData.text_ru,\n                text_uz: editFeedbackTitleData.text_uz,\n                text_en: editFeedbackTitleData.text_en,\n            }\n\n\n            form.setFieldsValue(edit)\n        }\n\n    }, [editFeedbackTitleData])\n\n\n    const onFinish = (values) => {\n\n        const formData = new FormData();\n\n        formData.append('title_ru', values.title_ru);\n        formData.append('title_uz', values.title_uz);\n        formData.append('title_en', values.title_en);\n        formData.append('text_ru', values.text_ru);\n        formData.append('text_uz', values.text_uz);\n        formData.append('text_en', values.text_en);\n\n\n        if (editFeedbackTitleData) {\n            putFeedbackTitle({url: '/feedback-section-title', data: formData, id: editId})\n        } else {\n            postFeedbackTitleMutate({url: \"/feedback-section-title/\", data: formData});\n        }\n\n\n    }\n    const onFinishFailed = (errorInfo) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n\n    // refresh page again get data\n\n    useEffect(() => {\n        const storedValues = JSON.parse(localStorage.getItem('myFormValues'));\n        if (storedValues) {\n            storedValues.images = []\n            form.setFieldsValue(storedValues);\n        }\n\n        const handleBeforeUnload = () => {\n\n            localStorage.setItem(\n                'myFormValues',\n                JSON.stringify(form.getFieldsValue()),\n            );\n        };\n\n        window.addEventListener('beforeunload', handleBeforeUnload);\n\n        return () => {\n            localStorage.removeItem('editDataId')\n            localStorage.removeItem('myFormValues')\n            window.removeEventListener('beforeunload', handleBeforeUnload);\n        }\n    }, []);\n\n\n    return (\n        <div>\n            {(postFeedbackTitleLoading || editFeedbackTitleLoading || putFeedbackTitleLoading) ?\n                <AppLoader/> :\n                <Form\n                    form={form}\n                    name=\"basic\"\n                    labelCol={{\n                        span: 24\n                    }}\n                    wrapperCol={{\n                        span: 24\n                    }}\n                    style={{\n                        maxWidth: \"100%\"\n                    }}\n                    initialValues={initialValueForm}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n                    <Row gutter={20}>\n                        <Col span={8}>\n                            <FormInput\n                                required={true}\n                                required_text={'Необходимо ввести заголовок'}\n                                label={'Title Ru'}\n                                name={'title_ru'}\n                            />\n\n                        </Col>\n                        <Col span={8}>\n                            <FormInput\n                                required={true}\n                                required_text={'Sarlavha kiritish kerak'}\n                                label={'Title Uz'}\n                                name={'title_uz'}\n                            />\n\n                        </Col>\n                        <Col span={8}>\n                            <FormInput\n                                required={true}\n                                required_text={'A title must be entered'}\n                                label={'Title En'}\n                                name={'title_en'}\n                            />\n\n                        </Col>\n                    </Row>\n                    <Row gutter={20}>\n\n                        <Col span={24}>\n                            <FormTextArea\n                                required={true}\n                                required_text={'Требуется дополнительный заголовок'}\n                                label={'Описание Ru'}\n                                name={'text_ru'}\n                            />\n\n                        </Col>\n                        <Col span={24}>\n                            <FormTextArea\n                                required={true}\n                                required_text={'Qo\\'shimcha sarlavha talab qilinadi'}\n                                label={'Tavsif Uz'}\n                                name={'text_uz'}\n                            />\n\n\n                        </Col>\n                        <Col span={24}>\n                            <FormTextArea\n                                required={true}\n                                required_text={'An additional title is required'}\n                                label={'Description En'}\n                                name={'text_en'}\n                            />\n\n                        </Col>\n                    </Row>\n                    <Button type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"20px\"}}>\n                        {\n                            editFeedbackTitleSuccess ? 'Edit' : 'Add'\n                        }\n                    </Button>\n                </Form>\n            }\n        </div>\n    );\n};\n\nexport default FeedBackTitlePostEdit;","import { Col } from '../grid';\nexport default Col;"],"names":["_ref","label","name","required","required_text","warning","_jsx","Form","Item","_jsxs","children","rules","message","Input","TextArea","rows","initialValueForm","title_ru","title_uz","title_en","text_ru","text_uz","text_en","FeedBackTitlePostEdit","form","useForm","navigate","useNavigate","editId","useSelector","state","editData","dispatch","useDispatch","mutate","postFeedbackTitleMutate","data","postFeedbackTitle","isLoading","postFeedbackTitleLoading","isSuccess","postFeedbackTitleSuccess","useMutation","url","apiService","postData","onSuccess","success","onError","error","obj","response","concat","editFeedbackTitleLoading","editFeedbackTitleData","refetch","editFeedbackTitleRefetch","editFeedbackTitleSuccess","useQuery","getDataByID","enabled","putFeedbackTitle","putFeedbackTitleLoading","putData","putFeedbackTitleSuccess","_ref2","id","useEffect","type","EDIT_DATA","payload","setFieldsValue","edit","storedValues","JSON","parse","localStorage","getItem","images","handleBeforeUnload","setItem","stringify","getFieldsValue","window","addEventListener","removeItem","removeEventListener","AppLoader","labelCol","span","wrapperCol","style","maxWidth","initialValues","onFinish","values","formData","FormData","append","onFinishFailed","errorInfo","console","log","autoComplete","Row","gutter","Col","FormInput","FormTextArea","Button","htmlType","width","marginTop"],"sourceRoot":""}