{"version":3,"file":"static/js/867.eafa606f.chunk.js","mappings":"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","sources":["@crema/core/Form/FormInput.jsx","@crema/core/Form/FormTextArea.jsx","pages/sample/Facilities/FacilitiesPostEdit.jsx"],"sourcesContent":["import React from 'react';\nimport {Form, Input} from \"antd\";\nimport PropTypes from \"prop-types\";\n\nconst FormInput = ({label,name,required,required_text,warning}) => {\n    return (\n        <Form.Item\n            label={warning ? <div>\n                <p>{label}</p>\n                <br/>\n                <p>{warning}</p>\n            </div>:<div>{label}</div>}\n            name={name}\n\n            rules={[{\n                required: required, message: required_text\n            }]}\n        >\n            <Input />\n        </Form.Item>\n    );\n};\n\nexport default FormInput;\n\nFormInput.propTypes = {\n    label: PropTypes.string,\n    warning: PropTypes.string,\n    name: PropTypes.any,\n    required: PropTypes.bool,\n    required_text:PropTypes.string\n};","import React from 'react';\nimport {Form } from \"antd\";\nimport TextArea from \"antd/es/input/TextArea\";\nimport PropTypes from \"prop-types\";\n\nconst FormTextArea = ({label,name,required,required_text}) => {\n    return (\n        <Form.Item\n            label={label}\n            name={name}\n\n            rules={[{\n                required: required, message: required_text\n            }]}\n        >\n            <TextArea rows={4}/>\n        </Form.Item>\n    );\n};\n\nexport default FormTextArea;\n\nFormTextArea.propTypes = {\n    label: PropTypes.string,\n    name: PropTypes.any,\n    required: PropTypes.bool,\n    required_text:PropTypes.string\n};","import React, {useEffect, useMemo, useState} from 'react';\nimport {Button, Col, Form, message, Row, Select, Upload} from \"antd\";\nimport {useMutation, useQuery} from \"react-query\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport {AppLoader} from \"../../../@crema\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport ImgCrop from \"antd-img-crop\";\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\nimport FormInput from \"../../../@crema/core/Form/FormInput\";\nimport FormTextArea from \"../../../@crema/core/Form/FormTextArea\";\n\n\n\nconst initialValueForm = {\n    index_image: [],\n    inner_image: [],\n    is_index:false,\n    title_uz: \"\",\n    title_ru: \"\",\n    title_en: \"\",\n    sub_title_ru: \"\",\n    sub_title_uz: \"\",\n    sub_title_en: \"\",\n};\n\n\nconst FacilitiesPostEdit = () => {\n\n    const [form] = Form.useForm();\n    const navigate = useNavigate()\n    const {editId} = useSelector(state => state.editData)\n    const dispatch = useDispatch()\n\n\n    const [fileListPropsInner, setFileListPropsInner] = useState([]);\n    const [fileListPropsIndex, setFileListPropsIndex] = useState([]);\n    const [isUpload, setIsUpload] = useState('');\n\n\n\n\n\n    // query-image\n    const {\n        mutate: imagesUploadMutate,\n        data: imagesUpload,\n        isLoading: imagesUploadLoading,\n        isSuccess: imagesUploadSuccess,\n    } = useMutation(({url, formData}) => apiService.postData(url, formData), {\n\n        onSuccess: () => {\n\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n\n\n    // query-facilities\n    const {\n        mutate: postFacilitiesMutate,\n        data: postFacilities,\n        isLoading: postFacilitiesLoading,\n        isSuccess: postFacilitiesSuccess,\n\n    } = useMutation(({url, data}) => apiService.postData(url, data), {\n        onSuccess: () => {\n\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n\n    // query-edit\n    const {\n        isLoading: editFacilitiesLoading,\n        data: editFacilitiesData,\n        refetch: editFacilitiesRefetch,\n        isSuccess: editFacilitiesSuccess,\n\n    } = useQuery([\"edit-facilities\", editId], () => apiService.getDataByID(\"/about/about-facilities\", editId), {\n        enabled: false\n    });\n\n\n    // put-query\n    const {\n        mutate: putFacilities,\n        isLoading: putFacilitiesLoading,\n        data: putData,\n        isSuccess: putFacilitiesSuccess\n    } = useMutation(({\n                         url, data, id\n                     }) => apiService.editData(url, data, id), {\n        onSuccess: () => {\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n\n    // delete image\n\n    const {mutate: imagesDeleteMutate} = useMutation(({url, ids}) => apiService.deleteImages(url, ids), {\n        onSuccess: () => message.success('Success'),\n        onError: (error) => message.error(error.message)\n    });\n\n    //                                              =====useEffect====\n\n    // facilities success\n    useEffect(() => {\n        if (putFacilitiesSuccess) {\n            dispatch({type: EDIT_DATA, payload: \"\"})\n        }\n        if (postFacilitiesSuccess || putFacilitiesSuccess) {\n            navigate('/facilities')\n        }\n    }, [postFacilities, putData])\n\n    // if edit facilities\n    useEffect(() => {\n        if (editId !== \"\") {\n            editFacilitiesRefetch();\n        }\n    }, [editId]);\n\n    // if no edit facilities\n    useEffect(() => {\n        if (editId === \"\") {\n            form.setFieldsValue(initialValueForm)\n        }\n    }, []);\n\n\n    //edit facilities\n    useEffect(() => {\n        const inner_image = [{\n            uid: editFacilitiesData?.inner_image?.id,\n            name: editFacilitiesData?.inner_image?.id,\n            status: 'done',\n            url: editFacilitiesData?.inner_image?.image,\n        }];\n\n        const index_image = [{\n            uid: editFacilitiesData?.index_image?.id,\n            name: editFacilitiesData?.index_image?.id,\n            status: 'done',\n            url: editFacilitiesData?.index_image?.image,\n        }];\n        if (editFacilitiesSuccess) {\n\n            const edit = {\n                title_uz: editFacilitiesData?.title_uz,\n                title_ru: editFacilitiesData?.title_ru,\n                title_en: editFacilitiesData?.title_en,\n                sub_title_ru: editFacilitiesData?.sub_title_ru,\n                sub_title_uz: editFacilitiesData?.sub_title_uz,\n                sub_title_en: editFacilitiesData?.sub_title_en,\n                inner_image,\n                index_image,\n                is_index:editFacilitiesData?.is_index\n            }\n\n\n            setFileListPropsInner(inner_image);\n            setFileListPropsIndex(index_image)\n            form.setFieldsValue(edit)\n        }\n\n    }, [editFacilitiesData])\n    const onFinish = (values) => {\n\n        const data = {\n            inner_image:fileListPropsInner[0]?.uid,\n            index_image:fileListPropsIndex[0]?.uid,\n            title_uz: values.title_uz,\n            title_ru: values.title_ru,\n            title_en: values.title_en,\n            sub_title_ru: values.sub_title_ru,\n            sub_title_uz: values.sub_title_uz,\n            sub_title_en: values.sub_title_en,\n            is_index: values.is_index,\n\n        };\n        if (editFacilitiesSuccess) {\n\n            putFacilities({url: \"about/about-facilities\", data, id: editId});\n        } else {\n            postFacilitiesMutate({url: \"about/about-facilities/\", data});\n        }\n    }\n    const onFinishFailed = (errorInfo) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n    // refresh page again get data\n\n    useEffect(() => {\n        const storedValues = JSON.parse(localStorage.getItem('myFormValues'));\n        if (storedValues) {\n            storedValues.images = []\n            form.setFieldsValue(storedValues);\n        }\n\n        const handleBeforeUnload = () => {\n\n            localStorage.setItem('myFormValues', JSON.stringify(form.getFieldsValue()),);\n        };\n\n        window.addEventListener('beforeunload', handleBeforeUnload);\n\n        return () => {\n            localStorage.removeItem('editDataId')\n            localStorage.removeItem('myFormValues')\n            window.removeEventListener('beforeunload', handleBeforeUnload);\n        }\n    }, []);\n\n    // image\n    useEffect(() => {\n        // inner\n        if (imagesUploadSuccess&& isUpload === \"inner\") {\n            const uploadImg = [{\n                uid: imagesUpload?.images[0]?.id,\n                name: imagesUpload?.images[0]?.id,\n                status: \"done\",\n                url: imagesUpload?.images[0]?.url\n            }]\n\n            form.setFieldsValue({inner_image: uploadImg});\n            setFileListPropsInner(uploadImg);\n            setIsUpload('')\n            return\n        }\n        // index\n        if (imagesUploadSuccess&& isUpload === \"index\") {\n            const uploadImg = [{\n                uid: imagesUpload?.images[0]?.id,\n                name: imagesUpload?.images[0]?.id,\n                status: \"done\",\n                url: imagesUpload?.images[0]?.url\n            }]\n\n            form.setFieldsValue({index_image: uploadImg});\n            setFileListPropsIndex(uploadImg);\n            setIsUpload('')\n            return\n        }\n    }, [imagesUpload]);\n\n    const onChangeImageInner = ({fileList: newFileList}) => {\n        if (fileListPropsInner.length !== 0 || newFileList.length === 0) {\n            form.setFieldsValue({inner_image: []});\n            const id = [fileListPropsInner[0]?.uid];\n            const ids = {\n                image_ids: id\n            }\n            imagesDeleteMutate({url: \"about/images/delete\", ids});\n            setFileListPropsInner([])\n        }\n        const formData = new FormData();\n\n        if (newFileList.length !== 0) {\n            formData.append(\"uploaded_images\", newFileList[0].originFileObj);\n            imagesUploadMutate({url: \"/about/images/\", formData});\n            setIsUpload('inner')\n        }\n    };\n\n    const onChangeImageIndex = ({fileList: newFileList}) => {\n        if (fileListPropsIndex.length !== 0 || newFileList.length === 0) {\n            form.setFieldsValue({index_image: []});\n            const id = [fileListPropsIndex[0]?.uid];\n            const ids = {\n                image_ids: id\n            }\n            imagesDeleteMutate({url: \"about/images/delete\", ids});\n            setFileListPropsIndex([])\n        }\n        const formData = new FormData();\n\n        if (newFileList.length !== 0) {\n            formData.append(\"uploaded_images\", newFileList[0].originFileObj);\n            imagesUploadMutate({url: \"/about/images/\", formData});\n            setIsUpload('index')\n        }\n    };\n\n    const onPreview = async (file) => {\n        let src = file.url;\n        if (!src) {\n            src = await new Promise((resolve) => {\n                const reader = new FileReader();\n                reader.readAsDataURL(file.originFileObj);\n                reader.onload = () => resolve(reader.result);\n            });\n        }\n        const image = new Image();\n        image.src = src;\n        const imgWindow = window.open(src);\n        imgWindow?.document.write(image.outerHTML);\n    };\n\n\n// selection\n    const optionAvailable = useMemo(() => {\n\n        return [\n            {\n                value: true,\n                label: 'В продаже',\n            },\n            {\n                value: false,\n                label: 'Нет в продаже',\n            },\n        ]\n    }, []);\n\n\n\n\n\n    return (<div>\n        {(postFacilitiesLoading || editFacilitiesLoading || putFacilitiesLoading || imagesUploadLoading) ? <AppLoader/> :\n            <Form\n                form={form}\n                name=\"basic\"\n                labelCol={{\n                    span: 24\n                }}\n                wrapperCol={{\n                    span: 24\n                }}\n                style={{\n                    maxWidth: \"100%\"\n                }}\n                initialValues={initialValueForm}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                autoComplete=\"off\"\n            >\n\n\n                <Row gutter={20}>\n\n                    <Col span={24}>\n                        <FormInput\n                            required={true}\n                            required_text={'Необходимо ввести заголовок'}\n                            label={'Заголовок Ru'}\n                            name={'title_ru'}\n                        />\n\n                    </Col>\n                    <Col span={24}>\n                        <FormInput\n                            required={true}\n                            required_text={'Sarlavha kiritish kerak'}\n                            label={'Sarlavha Uz'}\n                            name={'title_uz'}\n                        />\n\n\n                    </Col>\n                    <Col span={24}>\n                        <FormInput\n                            required={true}\n                            required_text={'A title is required'}\n                            label={'Title En'}\n                            name={'title_en'}\n                        />\n\n                    </Col>\n                </Row>\n                <Row gutter={20}>\n                    <Col span={24}>\n                        <FormTextArea\n                            required={true}\n                            required_text={'Необходимо ввести описание'}\n                            label={'Подзаголовок Ru'}\n                            name={'sub_title_ru'}\n                        />\n                    </Col>\n                    <Col span={24}>\n                        <FormTextArea\n                            required={true}\n                            required_text={'Tavsifi kiritish kerak'}\n                            label={'Qo\\'shimcha Sarlavha Uz'}\n                            name={'sub_title_uz'}\n                        />\n                    </Col>\n                    <Col span={24}>\n                        <FormTextArea\n                            required={true}\n                            required_text={'A description must be entered'}\n                            label={'Sub Title En'}\n                            name={'sub_title_en'}\n                        />\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item\n                            label={'Должна ли эта услуга появиться на главной странице?'}\n                            name={'is_index'}\n                            rules={[{\n                                required: true, message: 'Вы должны выбрать'\n                            }]}\n                            wrapperCol={{\n                                span: 24,\n                            }}\n                        >\n                            <Select\n                                style={{\n                                    width: '100%',\n                                }}\n                                placeholder=''\n                                optionLabelProp='label'\n                                options={optionAvailable}\n                            />\n                        </Form.Item>\n\n                    </Col>\n                </Row>\n                <Row gutter={20}>\n                    <Col span={12}>\n                        <Form.Item\n                            label='Изображение внутренний'\n                            name={'inner_image'}\n                            rules={[{required: true, message: 'Требуется изображение внутренний'}]}>\n                            <ImgCrop>\n                                <Upload\n                                    maxCount={1}\n                                    fileList={fileListPropsInner}\n                                    listType='picture-card'\n                                    onChange={onChangeImageInner}\n                                    onPreview={onPreview}\n                                    beforeUpload={() => false}\n                                >\n                                    {fileListPropsInner.length > 0 ? \"\" : \"Upload\"}\n                                </Upload>\n                            </ImgCrop>\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item\n                            label='Картинка для открыток'\n                            name={'index_image'}\n                            rules={[{required: true, message: 'Требуется изображение'}]}>\n                            <ImgCrop>\n                                <Upload\n                                    maxCount={1}\n                                    fileList={fileListPropsIndex}\n                                    listType='picture-card'\n                                    onChange={onChangeImageIndex}\n                                    onPreview={onPreview}\n                                    beforeUpload={() => false}\n                                >\n                                    {fileListPropsIndex.length > 0 ? \"\" : \"Upload\"}\n                                </Upload>\n                            </ImgCrop>\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Button type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"20px\"}}>\n                    {editFacilitiesSuccess ? 'Изменить' : 'Создать'}\n                </Button>\n            </Form>}\n    </div>);\n};\n\nexport default FacilitiesPostEdit;"],"names":["_ref","label","name","required","required_text","warning","_jsx","Form","Item","_jsxs","children","rules","message","Input","TextArea","rows","initialValueForm","index_image","inner_image","is_index","title_uz","title_ru","title_en","sub_title_ru","sub_title_uz","sub_title_en","FacilitiesPostEdit","form","useForm","navigate","useNavigate","editId","useSelector","state","editData","dispatch","useDispatch","fileListPropsInner","setFileListPropsInner","useState","fileListPropsIndex","setFileListPropsIndex","isUpload","setIsUpload","mutate","imagesUploadMutate","data","imagesUpload","isLoading","imagesUploadLoading","isSuccess","imagesUploadSuccess","useMutation","url","formData","apiService","postData","onSuccess","success","onError","error","obj","response","concat","postFacilitiesMutate","postFacilities","postFacilitiesLoading","postFacilitiesSuccess","_ref2","editFacilitiesLoading","editFacilitiesData","refetch","editFacilitiesRefetch","editFacilitiesSuccess","useQuery","getDataByID","enabled","putFacilities","putFacilitiesLoading","putData","putFacilitiesSuccess","_ref3","id","imagesDeleteMutate","_ref4","ids","deleteImages","useEffect","type","EDIT_DATA","payload","setFieldsValue","_editFacilitiesData$i","_editFacilitiesData$i2","_editFacilitiesData$i3","_editFacilitiesData$i4","_editFacilitiesData$i5","_editFacilitiesData$i6","uid","status","image","edit","storedValues","JSON","parse","localStorage","getItem","images","handleBeforeUnload","setItem","stringify","getFieldsValue","window","addEventListener","removeItem","removeEventListener","_imagesUpload$images$","_imagesUpload$images$2","_imagesUpload$images$3","uploadImg","_imagesUpload$images$4","_imagesUpload$images$5","_imagesUpload$images$6","onPreview","async","src","file","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","Image","imgWindow","open","document","write","outerHTML","optionAvailable","useMemo","value","AppLoader","labelCol","span","wrapperCol","style","maxWidth","initialValues","onFinish","values","_fileListPropsInner$","_fileListPropsIndex$","onFinishFailed","errorInfo","console","log","autoComplete","Row","gutter","Col","FormInput","FormTextArea","Select","width","placeholder","optionLabelProp","options","ImgCrop","Upload","maxCount","fileList","listType","onChange","_ref5","newFileList","length","_fileListPropsInner$2","image_ids","FormData","append","beforeUpload","_ref6","_fileListPropsIndex$2","Button","htmlType","marginTop"],"sourceRoot":""}