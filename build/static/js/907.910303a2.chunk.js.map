{"version":3,"file":"static/js/907.910303a2.chunk.js","mappings":"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","sources":["@crema/core/Form/FormInput.jsx","@crema/core/Form/FormTextArea.jsx","pages/sample/AboutVideoBanner/AboutVideoPostEdit.jsx","../node_modules/@ant-design/icons-svg/es/asn/DeleteOutlined.js","../node_modules/@ant-design/icons/es/icons/DeleteOutlined.js"],"sourcesContent":["import React from 'react';\nimport {Form, Input} from \"antd\";\nimport PropTypes from \"prop-types\";\n\nconst FormInput = ({label,name,required,required_text,warning}) => {\n    return (\n        <Form.Item\n            label={warning ? <div>\n                <p>{label}</p>\n                <br/>\n                <p>{warning}</p>\n            </div>:<div>{label}</div>}\n            name={name}\n\n            rules={[{\n                required: required, message: required_text\n            }]}\n        >\n            <Input />\n        </Form.Item>\n    );\n};\n\nexport default FormInput;\n\nFormInput.propTypes = {\n    label: PropTypes.string,\n    warning: PropTypes.string,\n    name: PropTypes.any,\n    required: PropTypes.bool,\n    required_text:PropTypes.string\n};","import React from 'react';\nimport {Form } from \"antd\";\nimport TextArea from \"antd/es/input/TextArea\";\nimport PropTypes from \"prop-types\";\n\nconst FormTextArea = ({label,name,required,required_text}) => {\n    return (\n        <Form.Item\n            label={label}\n            name={name}\n\n            rules={[{\n                required: required, message: required_text\n            }]}\n        >\n            <TextArea rows={4}/>\n        </Form.Item>\n    );\n};\n\nexport default FormTextArea;\n\nFormTextArea.propTypes = {\n    label: PropTypes.string,\n    name: PropTypes.any,\n    required: PropTypes.bool,\n    required_text:PropTypes.string\n};","import React, {useEffect, useState} from 'react';\nimport {Button, Col, Form, message, Row, Upload} from \"antd\";\nimport {useMutation, useQuery} from \"react-query\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport {AppLoader} from \"../../../@crema\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\nimport FormInput from \"../../../@crema/core/Form/FormInput\";\nimport FormTextArea from \"../../../@crema/core/Form/FormTextArea\";\n\n\n\nconst initialValueForm = {\n    video: [],\n    title_uz: \"\",\n    title_ru: \"\",\n    title_en: \"\",\n    sub_title_ru: \"\",\n    sub_title_uz: \"\",\n    sub_title_en: \"\",\n\n};\n\n\nconst AboutVideoPostEdit = () => {\n\n    const [form] = Form.useForm();\n    const navigate = useNavigate()\n    const {editId} = useSelector(state => state.editData)\n    const dispatch = useDispatch()\n\n\n    const [fileListProps, setFileListProps] = useState([]);\n\n\n\n\n\n\n\n\n\n    // query-about-info\n    const {\n        mutate: postAboutVideoMutate,\n        data: postAboutVideo,\n        isLoading: postAboutVideoLoading,\n        isSuccess: postAboutVideoSuccess,\n\n    } = useMutation(({url, data}) => apiService.postData(url, data), {\n        onSuccess: () => {\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n\n    // query-edit\n    const {\n        isLoading: editAboutInfoLoading,\n        data: editAboutInfoData,\n        refetch: editAboutInfoRefetch,\n        isSuccess: editAboutInfoSuccess,\n\n    } = useQuery([\"edit-about-info\", editId], () => apiService.getDataByID(\"/about/index-content-section\", editId), {\n        enabled: false\n    });\n\n\n    // put-query\n    const {\n        mutate: putAboutInfo,\n        isLoading: putAboutInfoLoading,\n        data: putData,\n        isSuccess: putAboutInfoSuccess\n    } = useMutation(({\n                         url, data, id\n                     }) => apiService.editData(url, data, id), {\n        onSuccess: () => {\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n\n\n\n    //                                              =====useEffect====\n\n    // about-info success\n    useEffect(() => {\n        if (putAboutInfoSuccess) {\n            dispatch({type: EDIT_DATA, payload: \"\"})\n        }\n        if (postAboutVideoSuccess || putAboutInfoSuccess) {\n            navigate('/about-video')\n        }\n    }, [postAboutVideo, putData])\n\n    // if edit about-info\n    useEffect(() => {\n        if (editId !== \"\") {\n            editAboutInfoRefetch();\n        }\n    }, [editId]);\n\n    // if no edit about-info\n    useEffect(() => {\n        if (editId === \"\") {\n            form.setFieldsValue(initialValueForm)\n        }\n    }, []);\n\n\n    //edit about-info\n    useEffect(() => {\n\n\n\n        const video=[{\n            uid: editAboutInfoData?.id,\n            name: editAboutInfoData?.id,\n            status: \"done\",\n            url: editAboutInfoData?.video\n        }];\n\n        if (editAboutInfoSuccess) {\n\n            const edit = {\n                title_uz: editAboutInfoData?.title_uz,\n                title_ru: editAboutInfoData?.title_ru,\n                title_en: editAboutInfoData?.title_en,\n                sub_title_ru: editAboutInfoData?.sub_title_ru,\n                sub_title_uz: editAboutInfoData?.sub_title_uz,\n                sub_title_en: editAboutInfoData?.sub_title_en,\n                video,\n            }\n\n\n            setFileListProps(video);\n            form.setFieldsValue(edit)\n        }\n\n    }, [editAboutInfoData])\n    const onFinish = (values) => {\n\n        const formData = new FormData();\n\n        formData.append('title_uz', values.title_uz);\n        formData.append('title_ru', values.title_ru);\n        formData.append('title_en', values.title_en);\n        formData.append('sub_title_ru', values.sub_title_ru);\n        formData.append('sub_title_uz', values.sub_title_uz);\n        formData.append('sub_title_en', values.sub_title_en);\n\n\n        if (fileListProps[0]?.originFileObj) {\n            formData.append('video', fileListProps[0]?.originFileObj);\n        }\n\n\n\n\n        if (editAboutInfoSuccess) {\n\n            putAboutInfo({url: \"/about/index-content-section\", data:formData, id: editId});\n        } else {\n            postAboutVideoMutate({url: \"/about/index-content-section/\", data:formData});\n        }\n    }\n    const onFinishFailed = (errorInfo) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n    // refresh info again get data\n\n    useEffect(() => {\n        const storedValues = JSON.parse(localStorage.getItem('myFormValues'));\n        if (storedValues) {\n            storedValues.images = []\n            form.setFieldsValue(storedValues);\n        }\n\n        const handleBeforeUnload = () => {\n\n            localStorage.setItem('myFormValues', JSON.stringify(form.getFieldsValue()),);\n        };\n\n        window.addEventListener('beforeunload', handleBeforeUnload);\n\n        return () => {\n            localStorage.removeItem('editDataId')\n            localStorage.removeItem('myFormValues')\n            window.removeEventListener('beforeunload', handleBeforeUnload);\n        }\n    }, []);\n\n    // image\n    const onChangeImage = ({fileList: newFileList}) => {\n        setFileListProps(newFileList);\n        form.setFieldsValue({video: newFileList});\n\n    };\n\n\n\n\n    const onPreview = async (file) => {\n        let src = file.url;\n        if (!src) {\n            src = await new Promise((resolve) => {\n                const reader = new FileReader();\n                reader.readAsDataURL(file.originFileObj);\n                reader.onload = () => resolve(reader.result);\n            });\n        }\n        const image = new Image();\n        image.src = src;\n        const imgWindow = window.open(src);\n        imgWindow?.document.write(image.outerHTML);\n    };\n\n\n    return (<div>\n        {(postAboutVideoLoading || editAboutInfoLoading || putAboutInfoLoading) ? <AppLoader/> :\n            <Form\n                form={form}\n                name=\"basic\"\n                labelCol={{\n                    span: 24\n                }}\n                wrapperCol={{\n                    span: 24\n                }}\n                style={{\n                    maxWidth: \"100%\"\n                }}\n                initialValues={initialValueForm}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                autoComplete=\"off\"\n            >\n\n\n                <Row gutter={20}>\n\n                    <Col span={24}>\n                        <FormInput\n                            required={true}\n                            required_text={'Необходимо ввести заголовок'}\n                            label={'Заголовок Ru'}\n                            name={'title_ru'}\n                        />\n\n                    </Col>\n                    <Col span={24}>\n                        <FormInput\n                            required={true}\n                            required_text={'Sarlavha kiritish kerak'}\n                            label={'Sarlavha Uz'}\n                            name={'title_uz'}\n                        />\n\n\n                    </Col>\n                    <Col span={24}>\n                        <FormInput\n                            required={true}\n                            required_text={'A title is required'}\n                            label={'Title En'}\n                            name={'title_en'}\n                        />\n\n                    </Col>\n                </Row>\n                <Row gutter={20}>\n\n                    <Col span={24}>\n                        <FormTextArea\n                            required={true}\n                            required_text={'Требуется дополнительный заголовок'}\n                            label={'Подзаголовок Ru'}\n                            name={'sub_title_ru'}\n                        />\n\n                    </Col>\n                    <Col span={24}>\n                        <FormTextArea\n                            required={true}\n                            required_text={'Qo\\'shimcha sarlavha talab qilinadi'}\n                            label={'Qo\\'shimcha Sarlavha Uz'}\n                            name={'sub_title_uz'}\n                        />\n\n\n                    </Col>\n                    <Col span={24}>\n                        <FormTextArea\n                            required={true}\n                            required_text={'An additional title is required'}\n                            label={'Sub Title En'}\n                            name={'sub_title_en'}\n                        />\n\n                    </Col>\n                </Row>\n                <Row gutter={20}>\n                    <Col span={12}>\n                        <Form.Item\n                            label='Видео'\n                            name={'video'}\n                            rules={[{required: true, message: 'Требуется видео'}]}>\n                                <Upload\n                                    maxCount={0}\n                                    fileList={fileListProps}\n                                    listType='picture-card'\n                                    onChange={onChangeImage}\n                                    onPreview={onPreview}\n                                    beforeUpload={() => false}\n                                >\n                                    {fileListProps.length > 0 ? \"\" : \"Upload\"}\n                                </Upload>\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n\n\n\n\n                <Button type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"20px\"}}>\n                    {editAboutInfoSuccess ? 'Изменить' : 'Создать'}\n                </Button>\n            </Form>}\n    </div>);\n};\n\nexport default AboutVideoPostEdit;","// This icon file is generated automatically.\nvar DeleteOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\" } }] }, \"name\": \"delete\", \"theme\": \"outlined\" };\nexport default DeleteOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DeleteOutlinedSvg from \"@ant-design/icons-svg/es/asn/DeleteOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar DeleteOutlined = function DeleteOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: DeleteOutlinedSvg\n  }));\n};\nDeleteOutlined.displayName = 'DeleteOutlined';\nexport default /*#__PURE__*/React.forwardRef(DeleteOutlined);"],"names":["_ref","label","name","required","required_text","warning","_jsx","Form","Item","_jsxs","children","rules","message","Input","TextArea","rows","initialValueForm","video","title_uz","title_ru","title_en","sub_title_ru","sub_title_uz","sub_title_en","AboutVideoPostEdit","form","useForm","navigate","useNavigate","editId","useSelector","state","editData","dispatch","useDispatch","fileListProps","setFileListProps","useState","mutate","postAboutVideoMutate","data","postAboutVideo","isLoading","postAboutVideoLoading","isSuccess","postAboutVideoSuccess","useMutation","url","apiService","postData","onSuccess","success","onError","error","obj","response","concat","editAboutInfoLoading","editAboutInfoData","refetch","editAboutInfoRefetch","editAboutInfoSuccess","useQuery","getDataByID","enabled","putAboutInfo","putAboutInfoLoading","putData","putAboutInfoSuccess","_ref2","id","useEffect","type","EDIT_DATA","payload","setFieldsValue","uid","status","edit","storedValues","JSON","parse","localStorage","getItem","images","handleBeforeUnload","setItem","stringify","getFieldsValue","window","addEventListener","removeItem","removeEventListener","AppLoader","labelCol","span","wrapperCol","style","maxWidth","initialValues","onFinish","values","_fileListProps$","formData","FormData","_fileListProps$2","append","originFileObj","onFinishFailed","errorInfo","console","log","autoComplete","Row","gutter","Col","FormInput","FormTextArea","Upload","maxCount","fileList","listType","onChange","_ref3","newFileList","onPreview","async","src","file","Promise","resolve","reader","FileReader","readAsDataURL","onload","result","image","Image","imgWindow","open","document","write","outerHTML","beforeUpload","length","Button","htmlType","width","marginTop","DeleteOutlined","props","ref","React","AntdIcon","_objectSpread","icon","DeleteOutlinedSvg","displayName"],"sourceRoot":""}